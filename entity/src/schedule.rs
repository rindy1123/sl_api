//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "schedule")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub start_time: i32,
    pub label: String,
    pub order: i32,
    pub personal_info_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::personal_info::Entity",
        from = "Column::PersonalInfoId",
        to = "super::personal_info::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    PersonalInfo,
}

impl Related<super::personal_info::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PersonalInfo.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
